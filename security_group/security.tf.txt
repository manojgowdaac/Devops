resource "aws_security_group" "Tf_security" {
  name        = "securtiy_group using Tf_security"
  description = "securtiy_group using Tf_security"
  #HERE, we are not using VPC so need to entre VPC-ID
  vpc_id      = "add vpc_id"
  # we can't use one security id in another VPC,it is VPC bounded

  tags = {
    Name = "Tf_security"
  }
}

resource "aws_vpc_security_group_ingress_rule" "allow_tls_ipv4" {
  description = "HTTP"
  security_group_id = aws_security_group.Tf_security.id
  cidr_ipv4         = "0.0.0.0/0"
  from_port         = 443
  ip_protocol       = "tcp"
  to_port           = 443
}

resource "aws_vpc_security_group_ingress_rule" "allow_tls_ipv6" {
  description = "SSH"
  security_group_id = aws_security_group.Tf_security.id
  cidr_ipv6         =  "::/0"
  from_port         = 22
  ip_protocol       = "tcp"
  to_port           = 22
  #port number for SSH is 22
}

resource "aws_vpc_security_group_egress_rule" "allow_all_traffic_ipv4" {
  security_group_id = aws_security_group.Tf_security.id
  cidr_ipv4         = "0.0.0.0/0"
  ip_protocol       = "-1" # semantically equivalent to all ports
}

resource "aws_vpc_security_group_egress_rule" "allow_all_traffic_ipv6" {
  security_group_id = aws_security_group.Tf_security.id
  cidr_ipv6         = "::/0"
  ip_protocol       = "-1" # semantically equivalent to all ports
}